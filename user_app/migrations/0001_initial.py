# Generated by Django 3.2 on 2022-09-12 19:30

import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import user_app.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(blank=True, max_length=17, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='phone')),
                ('is_teacher', models.BooleanField(blank=True, default=False, null=True)),
                ('is_student', models.BooleanField(blank=True, default=False, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='user_app.user')),
                ('account_number', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='account number')),
                ('balance', models.IntegerField(default=0, verbose_name='balance')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='user_app.user')),
                ('classe', models.CharField(choices=[('99', 'any'), ('0', 'Mahdhara'), ('1', '1AF'), ('2', '2AF'), ('3', '3AF'), ('4', '4AF'), ('5', '5AF'), ('6', '6AF'), ('7', '1AS'), ('8', '2AS'), ('9', '3AS'), ('10', '4AS'), ('11', '5AS'), ('12', '6AS'), ('13', '7AS')], max_length=30, null=True, verbose_name='classe')),
                ('speciality', models.CharField(blank=True, choices=[('A', 'Literature'), ('C', 'Math√©matiques'), ('D', 'Sciences_Naturelles'), ('O', 'Sciences_Religieuses'), ('T', 'Technique')], max_length=30, null=True, verbose_name='specialty')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='user_app.user')),
                ('diploma', models.FileField(blank=True, default=None, max_length=254, null=True, upload_to=None, verbose_name='diploma')),
                ('introduction', models.CharField(max_length=1000, verbose_name='introduction')),
                ('hourly_wage', models.PositiveIntegerField(default=1000, verbose_name='hourly wage')),
                ('subjects', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=50, verbose_name='subjects'), default=list, null=True, size=None)),
                ('disponibilities', models.JSONField(null=True, verbose_name='disponibilities')),
                ('avg_rating', models.IntegerField(default=0, verbose_name='average rating')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_MRU', models.IntegerField(verbose_name='amount')),
                ('phone_number', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='phone')),
                ('txn_id', models.CharField(blank=True, max_length=50, verbose_name='TXN ID')),
                ('wallet', models.CharField(choices=[('Bankily', 'Bankily'), ('Masrvi', 'Masrvi'), ('Sedad', 'Sedad'), ('SiteSpecific', 'SiteSpecific')], default='SiteSpecific', max_length=30, verbose_name='Wallet')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='transaction date')),
                ('is_charging', models.BooleanField(default=False, verbose_name='is_charging_transaction')),
                ('account', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='user_app.account')),
                ('destination_account', models.OneToOneField(blank=True, default=user_app.models.Transaction.default_platform_account, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='receiving_account', to='user_app.account')),
            ],
        ),
    ]
